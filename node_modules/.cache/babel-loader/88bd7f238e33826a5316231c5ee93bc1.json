{"ast":null,"code":"var _jsxFileName = \"/Users/macos10.12/Documents/GitHub/SoftwareDesignGroup23/fuel-quote-app/src/components/QuoteForm.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Button, Form, Row, Col, Modal, InputGroup } from 'react-bootstrap';\nimport React, { useEffect, useState } from \"react\";\nimport DatePicker from 'react-datepicker';\nimport NavBar from './NavBar';\nimport { withCookies, useCookies } from 'react-cookie';\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport './QuoteForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('react-datepicker/dist/react-datepicker.css');\n\nfunction simulateNetworkRequest() {\n  return new Promise(resolve => setTimeout(resolve, 100));\n}\n\nconst apiUrl = 'http://localhost:4000';\naxios.interceptors.request.use(config => {\n  const {\n    origin\n  } = new URL(config.url);\n  const allowedOrigins = [apiUrl];\n  const token = localStorage.getItem('token');\n\n  if (allowedOrigins.includes(origin)) {\n    config.headers.authorization = `Bearer ${token}`;\n  }\n\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\nconst QuoteForm = () => {\n  _s();\n\n  /*\n  Form Validation https://react-bootstrap.netlify.app/components/forms/#forms-validation-input-group\n  handleSubmit function checks that al required fields contain valid input\n  Form.Control.Feedback prompts user to correct info if necessary\n  Cannot submit form without validation\n  To fix immediate refresh on click/submit https://github.com/react-bootstrap/react-bootstrap/issues/1510\n  Stop modal from appearing if validation check fails https://stackoverflow.com/questions/58753515/bootstrap-4-validation-disable-submit-button-until-form-validated\n  */\n  const company_factor = 0.1;\n  const price_per_gallon = 1.50;\n  const [location_factor, setLocation_factor] = useState(0.00);\n  const [rate_history_factor, setRate_history_factor] = useState(0.00);\n  const [gallons_requested_factor, setGallons_requested_factor] = useState(0.00);\n  const [margin, setMargin] = useState(0.00);\n  const [suggested_price, setSuggestedPrice] = useState(0.00);\n  const [final_price, setFinal_price] = useState(0.00);\n  const [validated, setValidated] = useState(false);\n  const [username, setUsername] = useState('');\n  const [gallons, setGallons] = useState(0);\n  const [gallonsInvalid, setGallonsInvalid] = useState(1);\n  const [checked, setChecked] = useState(false);\n  const [show, setShow] = useState(false);\n  const [delivery_date, setDeliveryDate] = useState(new Date());\n  const [disableButton, setDisableButton] = useState('true');\n  const [isLoading, setLoading] = useState(false);\n  /* address from token retrieved here */\n\n  const [deliveryAddress, setDeliveryAddress] = useState('');\n  const [cookies, setCookie] = useCookies(['user']);\n  let history = useHistory();\n  useEffect(() => {\n    console.log('username: ', cookies.user);\n    axios.post('http://localhost:4000/users/current_user', {\n      username: cookies.user\n    }).then(res => {\n      if (res.status === 200) {\n        console.log('res.data: ', res.data); // Set username\n\n        setUsername(cookies.user); // Get user address info\n\n        if (res.data.address2 === null || res.data.address2 === undefined) {\n          console.log('address2 is undefined');\n          setDeliveryAddress(res.data.address1);\n          console.log('address1: ', res.data.address1);\n        } else {\n          console.log('address2: ', res.data.address2);\n          let combined_address = res.data.address1 + ', ' + res.data.address2;\n          console.log('combined_address: ', combined_address);\n          setDeliveryAddress(res.data.address1 + ', ' + res.data.address2);\n        } // Determine location factor\n\n\n        console.log(res.data.state);\n\n        if (res.data.state === \"TX\") {\n          setLocation_factor(0.02);\n        } else {\n          setLocation_factor(0.04);\n        }\n\n        console.log(username);\n        axios.post('http://localhost:4000/users/history', {\n          username: cookies.user\n        }).then(res => {\n          if (res.data === \"\") setRate_history_factor(0);else setRate_history_factor(0.01);\n        });\n      } else if (res.status === 404) {\n        console.log('res.status: ', res.status);\n        history.push('/');\n      }\n    }).catch(error => {\n      console.log('Error trying to fetch user data from cookie', error);\n    });\n\n    if (isLoading) {\n      simulateNetworkRequest().then(() => {\n        setLoading(false);\n      });\n    }\n  }, [isLoading]);\n  useEffect(() => {\n    // Determine gallons requested factor\n    if (gallons < 1000) {\n      setGallons_requested_factor(0.03);\n    } else {\n      setGallons_requested_factor(0.02);\n    }\n  }, [gallons]);\n  /* Ensure that factors are updated before margin and price are calculated */\n\n  useEffect(() => {\n    console.log(`location factor: ${location_factor}`);\n    console.log(`rate history factor: ${rate_history_factor}`);\n    console.log(`gallons requested factor: ${gallons_requested_factor}`);\n    setMargin(price_per_gallon * (location_factor - rate_history_factor + gallons_requested_factor + company_factor));\n    setSuggestedPrice(price_per_gallon + price_per_gallon * (location_factor - rate_history_factor + gallons_requested_factor + company_factor));\n    setFinal_price(gallons * (price_per_gallon + price_per_gallon * (location_factor - rate_history_factor + gallons_requested_factor + company_factor)));\n    console.log(`calculated margin: ${margin}`);\n    console.log(`calculated suggested price: ${suggested_price}`);\n    console.log(`calculated final price: ${final_price}`); // Enable \"Get Quote\" button\n\n    setDisableButton('false');\n  }, [location_factor, rate_history_factor, gallons_requested_factor]);\n\n  const calcQuote = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n      event.preventDefault();\n    } else {\n      event.preventDefault();\n      setShow(true);\n      setValidated(true);\n      setDisableButton('true');\n    }\n  };\n\n  const submitQuote = () => {\n    const quoteObj = {\n      username: username,\n      gallons_requested: gallons,\n      delivery_address: deliveryAddress,\n      delivery_date: delivery_date,\n      price_per_gallon: suggested_price\n    };\n    axios.post('http://localhost:4000/users/quoteupdate', quoteObj).then(res => {\n      console.log(res.data);\n    }).catch(error => {\n      console.log(error);\n    });\n    setValidated(false);\n    setShow(false);\n  };\n\n  const handleClose = () => {\n    setValidated(false);\n    setShow(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"profman-padding\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title-page\",\n        children: \"Get a Quote:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            \"paddingTop\": \"50px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            noValidate: true,\n            validated: validated,\n            onSubmit: calcQuote,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"validationGallonReq\",\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  className: \"col-auto\",\n                  style: {\n                    \"paddingLeft\": \"40px\",\n                    \"paddingTop\": \"0.5em\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Gallons Requested:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"col-auto\",\n                  children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                    hasValidation: true,\n                    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                      required: true,\n                      isInvalid: gallonsInvalid,\n                      className: \"gallonReq\",\n                      type: \"number\",\n                      placeholder: \"0\",\n                      min: \"1\",\n                      value: gallons,\n                      onChange: e => {\n                        setDisableButton('true');\n                        setGallons(parseInt(e.target.value));\n\n                        if (gallons > 0) {\n                          setGallonsInvalid(0);\n                        } else {\n                          setGallonsInvalid(1);\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      type: \"invalid\",\n                      children: \"Please provide a number greater than zero\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"validationAddress\",\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  md: \"auto\",\n                  className: \"address-box\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      \"font-weight\": \"bold\"\n                    },\n                    children: deliveryAddress\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 76\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  style: {\n                    \"paddingTop\": \"20px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                    required: true,\n                    isInvalid: !checked,\n                    type: \"checkbox\",\n                    label: \"Correct Delivery Address?\",\n                    feedback: \"Please verify address\",\n                    onChange: () => {\n                      setChecked(!checked);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  style: {\n                    \"paddingLeft\": \"4.2em\",\n                    \"paddingRight\": \"0.8em\"\n                  },\n                  children: \"Delivery Date: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                  className: \"delivDatePicker\",\n                  selected: delivery_date,\n                  value: delivery_date,\n                  onChange: date => {\n                    setDeliveryDate(date);\n                  },\n                  minDate: new Date(),\n                  showDisabledMonthNavigation: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                \"paddingLeft\": \"140px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"danger\",\n                type: \"submit\",\n                disable: disableButton,\n                children: \"Get Quote\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 67\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: show,\n        onHide: handleClose,\n        backdrop: \"static\",\n        keyboard: false,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Calculated Cost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price per gallon: $ \", parseFloat(suggested_price.toString()).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total cost: $ \", parseFloat(final_price.toString()).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: submitQuote,\n            children: \"Submit Confirmation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleClose,\n            children: \"Get Another Quote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteForm, \"s5MD27LzUsKeU+WpDoEHz4o1qAk=\", false, function () {\n  return [useCookies, useHistory];\n});\n\n_c = QuoteForm;\nexport default QuoteForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteForm\");","map":{"version":3,"sources":["/Users/macos10.12/Documents/GitHub/SoftwareDesignGroup23/fuel-quote-app/src/components/QuoteForm.js"],"names":["Container","Button","Form","Row","Col","Modal","InputGroup","React","useEffect","useState","DatePicker","NavBar","withCookies","useCookies","useHistory","axios","require","simulateNetworkRequest","Promise","resolve","setTimeout","apiUrl","interceptors","request","use","config","origin","URL","url","allowedOrigins","token","localStorage","getItem","includes","headers","authorization","error","reject","QuoteForm","company_factor","price_per_gallon","location_factor","setLocation_factor","rate_history_factor","setRate_history_factor","gallons_requested_factor","setGallons_requested_factor","margin","setMargin","suggested_price","setSuggestedPrice","final_price","setFinal_price","validated","setValidated","username","setUsername","gallons","setGallons","gallonsInvalid","setGallonsInvalid","checked","setChecked","show","setShow","delivery_date","setDeliveryDate","Date","disableButton","setDisableButton","isLoading","setLoading","deliveryAddress","setDeliveryAddress","cookies","setCookie","history","console","log","user","post","then","res","status","data","address2","undefined","address1","combined_address","state","push","catch","calcQuote","event","form","currentTarget","checkValidity","stopPropagation","preventDefault","submitQuote","quoteObj","gallons_requested","delivery_address","handleClose","e","parseInt","target","value","date","parseFloat","toString","toFixed"],"mappings":"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","sourcesContent":["import {Container, Button, Form, Row, Col, Modal, InputGroup} from 'react-bootstrap'\nimport React, {useEffect, useState} from \"react\";\nimport DatePicker from 'react-datepicker'\nimport NavBar from './NavBar'\nimport {withCookies, useCookies} from 'react-cookie';\nimport {useHistory} from \"react-router-dom\";\nimport axios from 'axios';\nimport './QuoteForm.css'\n\nrequire('react-datepicker/dist/react-datepicker.css')\n\nfunction simulateNetworkRequest() {\n    return new Promise((resolve) => setTimeout(resolve, 100));\n}\n\nconst apiUrl = 'http://localhost:4000';\naxios.interceptors.request.use(\n    config => {\n        const {origin} = new URL(config.url);\n        const allowedOrigins = [apiUrl];\n        const token = localStorage.getItem('token');\n        if (allowedOrigins.includes(origin)) {\n            config.headers.authorization = `Bearer ${token}`;\n        }\n        return config;\n    },\n    error => {\n        return Promise.reject(error);\n    }\n);\n\nconst QuoteForm = () => {\n    /*\n    Form Validation https://react-bootstrap.netlify.app/components/forms/#forms-validation-input-group\n    handleSubmit function checks that al required fields contain valid input\n    Form.Control.Feedback prompts user to correct info if necessary\n    Cannot submit form without validation\n    To fix immediate refresh on click/submit https://github.com/react-bootstrap/react-bootstrap/issues/1510\n    Stop modal from appearing if validation check fails https://stackoverflow.com/questions/58753515/bootstrap-4-validation-disable-submit-button-until-form-validated\n    */\n\n    const company_factor = 0.1;\n    const price_per_gallon = 1.50;\n    const [location_factor, setLocation_factor] = useState(0.00)\n    const [rate_history_factor, setRate_history_factor] = useState(0.00)\n    const [gallons_requested_factor, setGallons_requested_factor] = useState(0.00)\n    const [margin, setMargin] = useState(0.00)\n    const [suggested_price, setSuggestedPrice] = useState(0.00)\n    const [final_price, setFinal_price] = useState(0.00)\n    const [validated, setValidated] = useState(false)\n    const [username, setUsername] = useState('')\n    const [gallons, setGallons] = useState(0)\n    const [gallonsInvalid, setGallonsInvalid] = useState(1);\n    const [checked, setChecked] = useState(false)\n    const [show, setShow] = useState(false)\n    const [delivery_date, setDeliveryDate] = useState(new Date())\n    const [disableButton, setDisableButton] = useState('true');\n    const [isLoading, setLoading] = useState(false);\n    /* address from token retrieved here */\n    const [deliveryAddress, setDeliveryAddress] = useState('');\n    const [cookies, setCookie] = useCookies(['user'])\n\n    let history = useHistory();\n\n\n    useEffect(() => {\n        console.log('username: ', cookies.user);\n        axios.post('http://localhost:4000/users/current_user', {username: cookies.user})\n            .then((res) => {\n                if (res.status === 200) {\n                    console.log('res.data: ', res.data);\n                    // Set username\n                    setUsername(cookies.user)\n                    // Get user address info\n                    if (res.data.address2 === null || res.data.address2 === undefined) {\n                        console.log('address2 is undefined');\n                        setDeliveryAddress(res.data.address1);\n                        console.log('address1: ', res.data.address1);\n                    } else {\n                        console.log('address2: ', res.data.address2);\n                        let combined_address = res.data.address1 + ', ' + res.data.address2;\n                        console.log('combined_address: ', combined_address)\n                        setDeliveryAddress(res.data.address1 + ', ' + res.data.address2);\n                    }\n\n                    // Determine location factor\n                    console.log(res.data.state)\n                    if (res.data.state === \"TX\") {\n                        setLocation_factor(0.02)\n                    } else {\n                        setLocation_factor(0.04)\n                    }\n                    console.log(username)\n                    axios.post('http://localhost:4000/users/history', {username: cookies.user})\n                        .then((res) => {\n                            if (res.data === \"\") setRate_history_factor(0)\n                            else setRate_history_factor(0.01)\n                        })\n\n                } else if (res.status === 404) {\n                    console.log('res.status: ', res.status)\n                    history.push('/')\n                }\n            }).catch((error) => {\n            console.log('Error trying to fetch user data from cookie', error);\n        })\n\n        if (isLoading) {\n            simulateNetworkRequest().then(() => {\n                setLoading(false);\n            });\n        }\n    }, [isLoading]);\n\n    useEffect(() => {\n        // Determine gallons requested factor\n        if (gallons < 1000) {\n            setGallons_requested_factor(0.03);\n        } else {\n            setGallons_requested_factor(0.02);\n        }\n    }, [gallons])\n\n    /* Ensure that factors are updated before margin and price are calculated */\n    useEffect(() => {\n        console.log(`location factor: ${location_factor}`)\n        console.log(`rate history factor: ${rate_history_factor}`)\n        console.log(`gallons requested factor: ${gallons_requested_factor}`)\n\n        setMargin(price_per_gallon * (location_factor - rate_history_factor + gallons_requested_factor + company_factor));\n        setSuggestedPrice(price_per_gallon + (price_per_gallon * (location_factor - rate_history_factor + gallons_requested_factor + company_factor)));\n        setFinal_price(gallons * (price_per_gallon + (price_per_gallon * (location_factor - rate_history_factor + gallons_requested_factor + company_factor))));\n\n        console.log(`calculated margin: ${margin}`)\n        console.log(`calculated suggested price: ${suggested_price}`)\n        console.log(`calculated final price: ${final_price}`)\n\n        // Enable \"Get Quote\" button\n        setDisableButton('false');\n\n    }, [location_factor, rate_history_factor, gallons_requested_factor])\n\n    const calcQuote = (event) => {\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.stopPropagation()\n            event.preventDefault()\n        } else {\n            event.preventDefault();\n            setShow(true)\n            setValidated(true)\n            setDisableButton('true');\n        }\n    }\n\n    const submitQuote = () => {\n        const quoteObj = {\n            username: username,\n            gallons_requested: gallons,\n            delivery_address: deliveryAddress,\n            delivery_date: delivery_date,\n            price_per_gallon: suggested_price\n        }\n        axios.post('http://localhost:4000/users/quoteupdate', quoteObj)\n            .then((res) => {\n                console.log(res.data)\n            }).catch((error) => {\n            console.log(error)\n        });\n\n        setValidated(false);\n        setShow(false);\n    }\n\n    const handleClose = () => {\n        setValidated(false);\n        setShow(false);\n    }\n\n    return (\n        <div>\n            <Container className='profman-padding'>\n                <h1 className=\"title-page\">Get a Quote:</h1>\n                <Row>\n                    <Col md=\"4\"/>\n                    <Col style={{\"paddingTop\": \"50px\"}}>\n                        <Form noValidate validated={validated} onSubmit={calcQuote}>\n                            {/*Gallon Request*/}\n                            <Form.Group controlId='validationGallonReq'>\n\n                                <Row>\n                                    <Col className='col-auto' style={{\"paddingLeft\": \"40px\", \"paddingTop\": \"0.5em\"}}>\n                                        <Form.Label>Gallons Requested:</Form.Label>\n                                    </Col>\n                                    <Col className='col-auto'>\n                                        <InputGroup hasValidation>\n                                        <Form.Control required\n                                                      isInvalid={gallonsInvalid}\n                                                      className='gallonReq'\n                                                      type='number'\n                                                      placeholder='0'\n                                                      min='1'\n                                                      value={gallons}\n                                                      onChange={(e) => {\n                                                          setDisableButton('true');\n                                                          setGallons(parseInt(e.target.value))\n                                                          if (gallons > 0) {\n                                                              setGallonsInvalid(0)\n                                                          } else {\n                                                              setGallonsInvalid(1)\n                                                          }\n                                                      }}\n                                        />\n                                        <Form.Control.Feedback type='invalid'>Please provide a\n                                            number greater than zero</Form.Control.Feedback>\n                                        </InputGroup>\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n\n                            {/*Verify Address*/}\n                            <Form.Group controlId='validationAddress'>\n                                <Row>\n                                    <Col md=\"auto\" className=\"address-box\"><p\n                                        style={{\"font-weight\": \"bold\"}}>{deliveryAddress}</p></Col>\n                                    <Col style={{\"paddingTop\": \"20px\"}}>\n                                        <Form.Check required\n                                                    isInvalid={!checked}\n                                                    type='checkbox'\n                                                    label='Correct Delivery Address?'\n                                                    feedback='Please verify address'\n                                                    onChange={() => {\n                                                        setChecked(!checked)\n                                                    }}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n\n                            {/*Delivery Date*/}\n                            {/* Delivery Date validated using react-datepicker DatePicker\n                https://reactdatepicker.com/\n                https://github.com/Hacker0x01/react-datepicker/issues/879\n\n                possible alt date picker https://getdatepicker.com/4/\n                */}\n                            <Form.Group>\n                                <Col>\n                                    <Form.Label style={{\"paddingLeft\": \"4.2em\", \"paddingRight\": \"0.8em\"}}>Delivery\n                                        Date: </Form.Label>\n                                    <DatePicker\n                                        className='delivDatePicker'\n                                        selected={delivery_date}\n                                        value={delivery_date}\n                                        onChange={date => {\n                                            setDeliveryDate(date)\n                                        }}\n                                        minDate={new Date()}\n                                        showDisabledMonthNavigation\n                                    />\n                                </Col>\n                            </Form.Group>\n\n                            <div style={{\"paddingLeft\": \"140px\"}}><Button variant='danger' type='submit'\n                                                                          disable={disableButton}>Get Quote</Button>\n                            </div>\n                        </Form>\n                    </Col>\n                </Row>\n\n                <Modal\n                    show={show}\n                    onHide={handleClose}\n                    backdrop='static'\n                    keyboard={false}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title>Calculated Cost</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <p>Price per gallon: $ {parseFloat(suggested_price.toString()).toFixed(2)}</p>\n                        <p>Total cost: $ {parseFloat(final_price.toString()).toFixed(2)}</p>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant='danger' onClick={submitQuote}>Submit Confirmation</Button>\n                        <Button variant='secondary' onClick={handleClose}>Get Another Quote</Button>\n                    </Modal.Footer>\n                </Modal>\n            </Container>\n        </div>\n    )\n}\n\nexport default QuoteForm"]},"metadata":{},"sourceType":"module"}