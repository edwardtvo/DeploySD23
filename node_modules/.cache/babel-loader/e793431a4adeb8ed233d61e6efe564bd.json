{"ast":null,"code":"var _jsxFileName = \"/Users/macos10.12/Documents/GitHub/SoftwareDesignGroup23/fuel-quote-app/src/components/History.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport MOCK_DATA from './MOCK_DATA.json';\nimport { COLUMNS } from './Columns';\nimport './History.css';\nimport { Link } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport { withCookies, useCookies } from 'react-cookie';\nimport * as ReactBootstrap from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst History = () => {\n  _s();\n\n  const [userList, setUserList] = useState([]);\n  const [cookies, setCookie] = useCookies(['user']);\n  const number = 1;\n  useEffect(() => {\n    axios.post('http://localhost:4000/users/history', {\n      username: cookies.user\n    }).then(res => {\n      setUserList(res.data);\n      console.log('userList: ', userList);\n    }).catch(function (error) {\n      console.log('Error: ', error);\n    });\n  }, [cookies.user]);\n\n  const renderHistory = (data, index) => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: data.gallons_requested\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: data.delivery_address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: data.delivery_date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: data.price_per_gallon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: data.amount_due\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ReactBootstrap.Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Gallons Requested\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delivery Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delivery Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price Per Gallon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount Due\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: userList.map(data => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.gallons_requested\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.delivery_address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.delivery_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.price_per_gallon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.amount_due\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n  /*\n      const columns = useMemo(() => COLUMNS, [])\n      const data = useMemo(() => MOCK_DATA, [])\n  \n      const tableInstance = useTable({\n          columns,\n          data\n      })\n  \n      const { getTableProps,\n              getTableBodyProps, \n              headerGroups, \n              rows, \n              prepareRow } = tableInstance \n  \n      return (\n          <div>\n          <NavBar loggedIn={true}/>\n          <table {...getTableProps()}>\n              <thead>\n                  {\n                      headerGroups.map(headerGroup => (\n                          <tr {...headerGroup.getHeaderGroupProps()}>\n                              {\n                                  headerGroup.headers.map( column => (\n                                      <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                                  ))\n                              }\n                          </tr>\n                      ))\n                  }\n              </thead>\n              <tbody {...getTableBodyProps()}>\n                  {\n                      rows.map(row => {\n                          prepareRow(row)\n                          return (\n                              <tr {...row.getRowProps()}>\n                                  {\n                                      row.cells.map( cell => {\n                                          return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                      })\n                                  }\n                              </tr>\n                          )\n                      })\n                  }\n              </tbody>\n              <h4>Version 1.0.0</h4>\n              <Link to='/'>Go Back</Link>\n              \n          </table>\n          </div>\n          \n      )*/\n};\n\n_s(History, \"xMkDda1QadvRVH/eEJ/4CQ8Pbrg=\", false, function () {\n  return [useCookies];\n});\n\n_c = History;\nexport default History;\n\nvar _c;\n\n$RefreshReg$(_c, \"History\");","map":{"version":3,"sources":["/Users/macos10.12/Documents/GitHub/SoftwareDesignGroup23/fuel-quote-app/src/components/History.js"],"names":["React","useMemo","useTable","MOCK_DATA","COLUMNS","Link","NavBar","useState","useEffect","axios","Row","Col","Container","withCookies","useCookies","ReactBootstrap","History","userList","setUserList","cookies","setCookie","number","post","username","user","then","res","data","console","log","catch","error","renderHistory","index","gallons_requested","delivery_address","delivery_date","price_per_gallon","amount_due","map"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport { useTable } from 'react-table'\nimport MOCK_DATA from './MOCK_DATA.json'\nimport { COLUMNS } from './Columns'\nimport './History.css'\nimport { Link } from 'react-router-dom'\nimport NavBar from './NavBar'\nimport {useState, useEffect } from 'react'\nimport axios from 'axios'\nimport {Row, Col, Container} from 'react-bootstrap'\nimport { withCookies, useCookies } from 'react-cookie';\nimport * as ReactBootstrap from 'react-bootstrap'\n\nconst History = () => {\n    const [userList, setUserList] = useState([]);\n    const [cookies, setCookie] = useCookies(['user']);\n    const number = 1;\n\n    useEffect(() => {\n        axios.post('http://localhost:4000/users/history', {username: cookies.user})\n            .then(res => {\n                setUserList(res.data);\n                console.log('userList: ', userList);\n                \n            })\n            .catch(function (error) {\n                console.log('Error: ',error);\n            })\n    }, [cookies.user]);\n\n    const renderHistory = (data, index) => {\n        return(\n            <tr>\n                {/*<td>{data.username}</td>*/}\n                <td>{data.gallons_requested}</td>\n                <td>{data.delivery_address}</td>\n                <td>{data.delivery_date}</td>\n                <td>{data.price_per_gallon}</td>\n                <td>{data.amount_due}</td>\n            </tr>\n        )\n    }\n\n    return (\n        <div>\n            {/*<h1 id = 'title'>Hello there</h1>*/}\n\n            <ReactBootstrap.Table striped bordered hover>\n                <thead>\n                    <tr>\n                        {/*<th>Username</th>*/}\n                        <th>Gallons Requested</th>\n                        <th>Delivery Address</th>\n                        <th>Delivery Date</th>\n                        <th>Price Per Gallon</th>\n                        <th>Amount Due</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {userList.map(data => {\n                        return(\n                            <tr>\n                                {/*<td>{data.username}</td>*/}\n                                <td>{data.gallons_requested}</td>\n                                <td>{data.delivery_address}</td>\n                                <td>{data.delivery_date}</td>\n                                <td>{data.price_per_gallon}</td>\n                                <td>{data.amount_due}</td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </ReactBootstrap.Table>\n\n            {/*\n            <Container>{userList.map((data, i) => {console.log(data.username); return <Row><Col>{data.username}</Col><Col>{data.gallons_requested}</Col></Row>;})}</Container>\n            */}\n        </div>\n    )\n/*\n    const columns = useMemo(() => COLUMNS, [])\n    const data = useMemo(() => MOCK_DATA, [])\n\n    const tableInstance = useTable({\n        columns,\n        data\n    })\n\n    const { getTableProps,\n            getTableBodyProps, \n            headerGroups, \n            rows, \n            prepareRow } = tableInstance \n\n    return (\n        <div>\n        <NavBar loggedIn={true}/>\n        <table {...getTableProps()}>\n            <thead>\n                {\n                    headerGroups.map(headerGroup => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {\n                                headerGroup.headers.map( column => (\n                                    <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                                ))\n                            }\n                        </tr>\n                    ))\n                }\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {\n                    rows.map(row => {\n                        prepareRow(row)\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {\n                                    row.cells.map( cell => {\n                                        return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                    })\n                                }\n                            </tr>\n                        )\n                    })\n                }\n            </tbody>\n            <h4>Version 1.0.0</h4>\n            <Link to='/'>Go Back</Link>\n            \n        </table>\n        </div>\n        \n    )*/\n}\n\nexport default History\n"]},"metadata":{},"sourceType":"module"}