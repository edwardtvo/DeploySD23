{"ast":null,"code":"import _slicedToArray from\"/Users/macos10.12/Documents/GitHub/SoftwareDesignGroup23/fuel-quote-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useMemo}from'react';import{useTable}from'react-table';import MOCK_DATA from'./MOCK_DATA.json';import{COLUMNS}from'./Columns';import'./History.css';import{Link}from'react-router-dom';import NavBar from'./NavBar';import{useState,useEffect}from'react';import axios from'axios';import{Row,Col,Container}from'react-bootstrap';import{withCookies,useCookies}from'react-cookie';import*as ReactBootstrap from'react-bootstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var History=function History(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),userList=_useState2[0],setUserList=_useState2[1];var _useCookies=useCookies(['user']),_useCookies2=_slicedToArray(_useCookies,2),cookies=_useCookies2[0],setCookie=_useCookies2[1];var number=1;useEffect(function(){axios.post('http://localhost:4000/users/history',{username:cookies.user}).then(function(res){setUserList(res.data);console.log('userList: ',userList);}).catch(function(error){console.log('Error: ',error);});},[cookies.user]);var renderHistory=function renderHistory(data,index){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:data.gallons_requested}),/*#__PURE__*/_jsx(\"td\",{children:data.delivery_address}),/*#__PURE__*/_jsx(\"td\",{children:data.delivery_date}),/*#__PURE__*/_jsx(\"td\",{children:data.price_per_gallon}),/*#__PURE__*/_jsx(\"td\",{children:data.amount_due})]});};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(ReactBootstrap.Table,{striped:true,bordered:true,hover:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Gallons Requested\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Delivery Address\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Delivery Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Price Per Gallon\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Amount Due\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:userList.map(function(data){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:data.gallons_requested}),/*#__PURE__*/_jsx(\"td\",{children:data.delivery_address}),/*#__PURE__*/_jsx(\"td\",{children:data.delivery_date}),/*#__PURE__*/_jsx(\"td\",{children:data.price_per_gallon}),/*#__PURE__*/_jsx(\"td\",{children:data.amount_due})]});})})]})});/*\n    const columns = useMemo(() => COLUMNS, [])\n    const data = useMemo(() => MOCK_DATA, [])\n\n    const tableInstance = useTable({\n        columns,\n        data\n    })\n\n    const { getTableProps,\n            getTableBodyProps, \n            headerGroups, \n            rows, \n            prepareRow } = tableInstance \n\n    return (\n        <div>\n        <NavBar loggedIn={true}/>\n        <table {...getTableProps()}>\n            <thead>\n                {\n                    headerGroups.map(headerGroup => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {\n                                headerGroup.headers.map( column => (\n                                    <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                                ))\n                            }\n                        </tr>\n                    ))\n                }\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {\n                    rows.map(row => {\n                        prepareRow(row)\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {\n                                    row.cells.map( cell => {\n                                        return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                    })\n                                }\n                            </tr>\n                        )\n                    })\n                }\n            </tbody>\n            <h4>Version 1.0.0</h4>\n            <Link to='/'>Go Back</Link>\n            \n        </table>\n        </div>\n        \n    )*/};export default History;","map":{"version":3,"sources":["/Users/macos10.12/Documents/GitHub/SoftwareDesignGroup23/fuel-quote-app/src/components/History.js"],"names":["React","useMemo","useTable","MOCK_DATA","COLUMNS","Link","NavBar","useState","useEffect","axios","Row","Col","Container","withCookies","useCookies","ReactBootstrap","History","userList","setUserList","cookies","setCookie","number","post","username","user","then","res","data","console","log","catch","error","renderHistory","index","gallons_requested","delivery_address","delivery_date","price_per_gallon","amount_due","map"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport { useTable } from 'react-table'\nimport MOCK_DATA from './MOCK_DATA.json'\nimport { COLUMNS } from './Columns'\nimport './History.css'\nimport { Link } from 'react-router-dom'\nimport NavBar from './NavBar'\nimport {useState, useEffect } from 'react'\nimport axios from 'axios'\nimport {Row, Col, Container} from 'react-bootstrap'\nimport { withCookies, useCookies } from 'react-cookie';\nimport * as ReactBootstrap from 'react-bootstrap'\n\nconst History = () => {\n    const [userList, setUserList] = useState([]);\n    const [cookies, setCookie] = useCookies(['user']);\n    const number = 1;\n\n    useEffect(() => {\n        axios.post('http://localhost:4000/users/history', {username: cookies.user})\n            .then(res => {\n                setUserList(res.data);\n                console.log('userList: ', userList);\n                \n            })\n            .catch(function (error) {\n                console.log('Error: ',error);\n            })\n    }, [cookies.user]);\n\n    const renderHistory = (data, index) => {\n        return(\n            <tr>\n                {/*<td>{data.username}</td>*/}\n                <td>{data.gallons_requested}</td>\n                <td>{data.delivery_address}</td>\n                <td>{data.delivery_date}</td>\n                <td>{data.price_per_gallon}</td>\n                <td>{data.amount_due}</td>\n            </tr>\n        )\n    }\n\n    return (\n        <div>\n            {/*<h1 id = 'title'>Hello there</h1>*/}\n\n            <ReactBootstrap.Table striped bordered hover>\n                <thead>\n                    <tr>\n                        {/*<th>Username</th>*/}\n                        <th>Gallons Requested</th>\n                        <th>Delivery Address</th>\n                        <th>Delivery Date</th>\n                        <th>Price Per Gallon</th>\n                        <th>Amount Due</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {userList.map(data => {\n                        return(\n                            <tr>\n                                {/*<td>{data.username}</td>*/}\n                                <td>{data.gallons_requested}</td>\n                                <td>{data.delivery_address}</td>\n                                <td>{data.delivery_date}</td>\n                                <td>{data.price_per_gallon}</td>\n                                <td>{data.amount_due}</td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </ReactBootstrap.Table>\n\n            {/*\n            <Container>{userList.map((data, i) => {console.log(data.username); return <Row><Col>{data.username}</Col><Col>{data.gallons_requested}</Col></Row>;})}</Container>\n            */}\n        </div>\n    )\n/*\n    const columns = useMemo(() => COLUMNS, [])\n    const data = useMemo(() => MOCK_DATA, [])\n\n    const tableInstance = useTable({\n        columns,\n        data\n    })\n\n    const { getTableProps,\n            getTableBodyProps, \n            headerGroups, \n            rows, \n            prepareRow } = tableInstance \n\n    return (\n        <div>\n        <NavBar loggedIn={true}/>\n        <table {...getTableProps()}>\n            <thead>\n                {\n                    headerGroups.map(headerGroup => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {\n                                headerGroup.headers.map( column => (\n                                    <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                                ))\n                            }\n                        </tr>\n                    ))\n                }\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {\n                    rows.map(row => {\n                        prepareRow(row)\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {\n                                    row.cells.map( cell => {\n                                        return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                    })\n                                }\n                            </tr>\n                        )\n                    })\n                }\n            </tbody>\n            <h4>Version 1.0.0</h4>\n            <Link to='/'>Go Back</Link>\n            \n        </table>\n        </div>\n        \n    )*/\n}\n\nexport default History\n"]},"metadata":{},"sourceType":"module"}